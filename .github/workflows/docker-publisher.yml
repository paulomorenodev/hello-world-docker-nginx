name: Build, Push, and Deploy Docker Image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GH_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # NOVO JOB DE DEPLOY
  deploy:
    # Garante que este job só rode após o 'build-and-push-image' ser concluído
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to OCI Server
        # Action popular que simplifica a execução de comandos via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.OCI_HOST }}
          username: ${{ secrets.OCI_USER }}
          key: ${{ secrets.OCI_SSH_KEY }}
          script: |
            # Faz o login no GHCR dentro do servidor
            echo ${{ secrets.GH_PAT }} | docker login ghcr.io -u ${{ secrets.GH_USER }} --password-stdin

            # Baixa a versão mais recente da imagem
            docker pull ghcr.io/${{ github.repository }}:latest

            # Para o contêiner atual, se ele estiver rodando (|| true evita erro se não existir)
            docker stop ngnix-github || true

            # Remove o contêiner antigo
            docker rm ngnix-github || true

            # Inicia o novo contêiner com a imagem atualizada
            docker run -d -p 80:80 --name ngnix-github --restart always ghcr.io/${{ github.repository }}:latest

            # (Opcional) Limpa imagens antigas e não utilizadas para economizar espaço
            docker image prune -f