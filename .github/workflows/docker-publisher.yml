name: Build, Push, and Deploy Docker Image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GH_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # CORREÇÃO 1: Adicionamos a tag 'latest' explicitamente.
          # A primeira linha usa as tags automáticas (como a da branch) e a segunda garante que 'latest' sempre exista.
          tags: |
            ${{ steps.meta.outputs.tags }}
            ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to OCI Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.OCI_HOST }}
          username: ${{ secrets.OCI_USER }}
          key: ${{ secrets.OCI_SSH_KEY }}
          script: |
            # CORREÇÃO 2: Adicionado 'set -e' para o script parar no primeiro erro.
            set -e

            echo ${{ secrets.GH_PAT }} | docker login ghcr.io -u ${{ secrets.GH_USER }} --password-stdin
            
            docker pull ghcr.io/${{ github.repository }}:latest
            
            docker stop ngnix-github || true
            docker rm ngnix-github || true
            
            docker run -d -p 80:80 --name ngnix-github --restart always ghcr.io/${{ github.repository }}:latest
            
            docker image prune -f